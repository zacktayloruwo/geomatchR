% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_gm_crossmatch.R
\name{gm_crossmatch}
\alias{gm_crossmatch}
\title{Calculates similarity scores and other diagnostics}
\usage{
gm_crossmatch(geom1, geom2, id1, id2, name1, name2, cutoff = 0.8, clean = TRUE)
}
\arguments{
\item{geom1}{The first polygon sf object}

\item{geom2}{The second polygon sf object}

\item{id1}{The unique polygon identification code of the first polygon sf object}

\item{id2}{The unique polygon identification code of the second polygon sf object}

\item{name1}{The unique polygon identification name of the first polygon sf object}

\item{name2}{The unique polygon identification name of the second polygon sf object}

\item{cutoff}{Minimal areal similarity cut-off. Defaults to 0.8}

\item{clean}{Make TRUE if you want to run `gm_clean()` on the sf objects. Defaults to TRUE}
}
\value{
Returns a list of tables:
  \itemize{
    \item similarity = match scores for all overlapping polygons
    \item top_ranked = top-ranked matches where rank_areal_f and rank_areal_b = 1 and similarity > cutoff
    \item no_match1 = polygons in geom1 without top-ranked matches
    \item no_match2 = polygons in geom2 without top-ranked matches
  }
}
\description{
`gm_crossmatch()` compares polygon sf objects geom1 and geom2 and returns a list
   of tables that help the user assess which polygons are high-probability matches.
   The returned list can be used to cartographically visualize similarity scores using
   the `gm_map_similarity()` and `gm_map_matches()` functions.
}
\examples{
library(sf)

# Create example polygon set 1
sf1 <- st_sf(
  geoid = c("A1", "A2", "A3"),
  geoname1 = c("Alpha", "Beta", "Gamma"),
  geometry = st_sfc(
    st_polygon(list(rbind(c(0,0), c(0,2), c(2,2), c(2,0), c(0,0)))),
    st_polygon(list(rbind(c(2,0), c(2,2), c(4,2), c(4,0), c(2,0)))),
    st_polygon(list(rbind(c(0,2), c(0,4), c(2,4), c(2,2), c(0,2))))
  ), crs = 4326
)

# Create example polygon set 2
sf2 <- st_sf(
  geoid = c("B1", "B2", "B3"),
  geoname2 = c("Eins", "Zwei", "Drei"),
  geometry = st_sfc(
    st_polygon(list(rbind(c(0.25,0), c(0,2), c(2,2), c(2,0), c(0.25,0)))), # same
    st_polygon(list(rbind(c(2,0), c(2,2), c(4,2), c(4,0), c(2,0)))),
    st_polygon(list(rbind(c(0,2), c(0.5,4), c(2.25,4), c(2.75,2), c(0,2))))
  ), crs = 4326
)

# Run gm_crossmatch
result <- gm_crossmatch(
  geom1 = sf1,
  geom2 = sf2,
  id1 = "geoid",
  id2 = "geoid",
  name1 = "geoname1",
  name2 = "geoname2",
  cutoff = 0.5,
  clean = TRUE
)

# Inspect outputs
names(result)
result$similarity
result$top_ranked
result$no_match1
result$no_match2
}
