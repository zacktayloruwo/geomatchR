% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_gm_map_matches.R
\name{gm_map_matches}
\alias{gm_map_matches}
\title{Visually represent a single polygon's matches}
\usage{
gm_map_matches(
  polygon,
  geom1,
  geom2,
  id1,
  id2,
  name1,
  name2,
  table,
  context = TRUE
)
}
\arguments{
\item{polygon}{The identification code of the polygon in geom1 to match}

\item{geom1}{The first polygon sf object}

\item{geom2}{The second polygon sf object}

\item{id1}{The unique polygon identification code of the first polygon sf object}

\item{id2}{The unique polygon identification code of the second polygon sf object}

\item{name1}{The unique polygon identification name of the first polygon sf object}

\item{name2}{The unique polygon identification name of the second polygon sf object}

\item{table}{An object of class list created by `gm_crossmatch()`}

\item{context}{If TRUE, draws the boundaries of the first polygon sf object as background visual reference}
}
\value{
Returns a ggplot object
}
\description{
`gm_map_matches()` creates a map of all matches to a single specified polygon.
}
\examples{
library(sf)

# Create example polygon set 1
sf1 <- st_sf(
  geoid = c("A1", "A2", "A3"),
  geoname1 = c("Alpha", "Beta", "Gamma"),
  geometry = st_sfc(
    st_polygon(list(rbind(c(0,0), c(0,2), c(2,2), c(2,0), c(0,0)))),
    st_polygon(list(rbind(c(2,0), c(2,2), c(4,2), c(4,0), c(2,0)))),
    st_polygon(list(rbind(c(0,2), c(0,4), c(2,4), c(2,2), c(0,2))))
  ), crs = 4326
)

# Create example polygon set 2
sf2 <- st_sf(
  geoid = c("B1", "B2", "B3"),
  geoname2 = c("Eins", "Zwei", "Drei"),
  geometry = st_sfc(
    st_polygon(list(rbind(c(0.25,0), c(0,2), c(2,2), c(2,0), c(0.25,0)))), # same
    st_polygon(list(rbind(c(2,0), c(2,2), c(4,2), c(4,0), c(2,0)))),
    st_polygon(list(rbind(c(0,2), c(0.5,4), c(2.25,4), c(2.75,2), c(0,2))))
  ), crs = 4326
)

# Run gm_crossmatch
result <- gm_crossmatch(
  geom1 = sf1,
  geom2 = sf2,
  id1 = "geoid",
  id2 = "geoid",
  name1 = "geoname1",
  name2 = "geoname2",
  cutoff = 0.5,
  clean = TRUE
)

# map matches of polygon 'A1'
gm_map_matches(
  polygon = "A1",
  geom1 = sf1,
  geom2 = sf2,
  id1 = "geoid",
  id2 = "geoid",
  name1 = "geoname1",
  name2 = "geoname2",
  table = result,
  context = TRUE
)
}
